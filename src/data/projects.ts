export interface TechDecision {
  title: string;
  description: string;
}

export interface Challenge {
  title: string;
  description: string;
}

export interface ProjectDetail {
  id: number;
  title: string;
  description: string;
  longDescription: string;
  technicalDetails: string;
  techDecisions: TechDecision[];
  challenges: Challenge[];
  images: string[];
  tags: string[];
  liveUrl?: string;
  githubUrl?: string;
  completionDate: string;
}

// Dados de exemplo mais detalhados para cada projeto
export const projectsData: ProjectDetail[] = [
  {
    id: 1,
    title: "Cardapiro",
    description:
      "Solu√ß√£o completa para cria√ß√£o de card√°pios digitais, com foco em performance, SEO e experi√™ncia do usu√°rio.",
    longDescription:
      "O Cardapiro √© uma plataforma desenvolvida para restaurantes que desejam criar e gerenciar card√°pios digitais de forma pr√°tica e eficiente. Criado de forma independente, o projeto j√° conta com usu√°rios reais testando a vers√£o gratuita. A aplica√ß√£o inclui recursos como personaliza√ß√£o de card√°pio, QR Code, integra√ß√£o com pedidos via WhatsApp e controle de destaques e promo√ß√µes. Tudo foi constru√≠do com foco em performance, acessibilidade e otimiza√ß√£o para mecanismos de busca (SEO).",
    technicalDetails:
      "Desenvolvido com React no front-end e Node.js no back-end, utilizando Firebase como banco de dados e autentica√ß√£o. A aplica√ß√£o √© otimizada com t√©cnicas de SEO e boas pr√°ticas de performance validadas pelo Google Lighthouse. Todo o desenvolvimento e infraestrutura foram pensados para garantir escalabilidade e uma boa experi√™ncia do usu√°rio, mesmo em dispositivos m√≥veis.",
    techDecisions: [
      {
        title: "Gerenciamento de Estado com Context API üóÇÔ∏è",
        description:
          "Utilizei o Context API para gerenciar o estado global da aplica√ß√£o. Foram criados tr√™s contextos principais: Users Context, Tasks Context e Auth Context. Essa estrutura evita requisi√ß√µes desnecess√°rias e garante persist√™ncia entre p√°ginas.",
      },
      {
        title: "Custom Hooks ü™ù",
        description:
          "Implementei Custom Hooks para requisi√ß√µes de dados e l√≥gica de autentica√ß√£o. Isso reduziu o uso de prop drilling e melhorou a organiza√ß√£o do c√≥digo.",
      },
      {
        title: "Layout Mobile-First üì±",
        description:
          "Desenvolvido com abordagem Mobile-First para garantir responsividade. Todos os elementos foram pensados para oferecer uma boa experi√™ncia em dispositivos m√≥veis.",
      },
    ],
    challenges: [
      {
        title: "Performance com Muitos Produtos üçÉ",
        description:
          "Implementei pagina√ß√£o e lazy loading para melhorar a performance do cat√°logo com grande volume de produtos e imagens. Foi necess√°rio otimizar o carregamento de imagens para manter uma boa experi√™ncia de navega√ß√£o.",
      },
      {
        title: "Seguran√ßa nas Transa√ß√µes üîí",
        description:
          "Utilizei tokens JWT e HTTPS para garantir a seguran√ßa das informa√ß√µes de pagamento e dados dos usu√°rios, al√©m de implementar autentica√ß√£o segura com Single Sign-On via Google e Facebook.",
      },
      {
        title: "Integra√ß√£o com Redes Sociais ü§ù",
        description:
          "A integra√ß√£o com autentica√ß√£o do Facebook apresentou diversos desafios t√©cnicos, mas  est√° sendo finalizada com sucesso, oferecendo mais praticidade e seguran√ßa no login dos usu√°rios.",
      },
      {
        title: "Otimiza√ß√£o de Performance para SEO üöÄ",
        description:
          "Atingir uma boa nota no Google Lighthouse foi um dos maiores desafios do projeto, principalmente devido ao uso de imagens. Ap√≥s v√°rias otimiza√ß√µes, consegui alcan√ßar uma pontua√ß√£o de 90%, garantindo uma aplica√ß√£o r√°pida e acess√≠vel.",
      },
    ],
    images: [
      "/assets/images/cardapiro/1.png",
      "/assets/images/cardapiro/2.png",
      "/assets/images/cardapiro/3.png",
      "/assets/images/cardapiro/4.png",
      "/assets/images/cardapiro/5.png",
      "/assets/images/cardapiro/6.png",
      "/assets/images/cardapiro/7.png",
      "/assets/images/cardapiro/8.png",
    ],
    tags: [
      "React",
      "Javascript",
      "Node.js",
      "Asaas",
      "HTML",
      "CSS",
      "Material UI",
      "Tailwind CSS",
      "Docker",
      "Firebase",
      "SEO",
      "Lighthouse",
      "Single Sign-On",
    ],
    liveUrl: "https://cardapiro.com.br/",
    completionDate: "Em andamento",
  },
  {
    id: 2,
    title: "HC App",
    description:
      "Plataforma de aplicativos white-label para cassinos com mais de 3.000 apps e 1 milh√£o de acessos mensais.",
    longDescription:
      "HC App √© uma plataforma robusta de aplicativos white-label, criada para influencers de cassinos online se conectarem com sua audi√™ncia. Atrav√©s da plataforma, os influenciadores podem fazer lives via youtube, enviar notifica√ß√µes, promover campanhas personalizadas, divulgar estrat√©gias de apostas esportivas e interagir em tempo real com seus seguidores. Atualmente, conta com mais de 3.000 apps ativos e mais de 1 milh√£o de acessos mensais.",
    technicalDetails:
      "O sistema foi desenvolvido com foco em escalabilidade e performance. Utilizei React e Javascript no frontend, com Firebase para autentica√ß√£o, banco de dados em tempo real e notifica√ß√µes push. A estrutura modular permite a cria√ß√£o automatizada de novos apps personalizados para cada influencer. A interface foi constru√≠da com Material UI, Next.js, React.js, garantindo rapidez e responsividade.",
    techDecisions: [
      {
        title: "Arquitetura Modular üß©",
        description:
          "A plataforma foi projetada para suportar m√∫ltiplos apps personalizados com base em um core compartilhado, permitindo r√°pida replica√ß√£o e manuten√ß√£o centralizada.",
      },
      {
        title: "Gerenciamento com Context API üóÇÔ∏è",
        description:
          "Utilizei Context API para manter o estado global e evitar requisi√ß√µes desnecess√°rias em diferentes √°reas da plataforma, como autentica√ß√£o, conte√∫do din√¢mico e configura√ß√µes por influencer.",
      },
      {
        title: "Integra√ß√£o com Firebase üî•",
        description:
          "O Firebase foi utilizado para autentica√ß√£o, Firestore em tempo real e notifica√ß√µes push, garantindo uma experi√™ncia din√¢mica e instant√¢nea.",
      },
      {
        title: "Notifica√ß√µes em Tempo Real üì°",
        description:
          "Implementei ferramentas para que os influencers possam enviar mensagens instant√¢neas para seus usu√°rios, criando uma experi√™ncia interativa e engajadora.",
      },
      {
        title: "Painel Admin White-Label üë§",
        description:
          "Cada influencer possui um painel administrativo exclusivo com controle total sobre conte√∫dos, promo√ß√µes, notifica√ß√µes e personaliza√ß√£o do seu pr√≥prio app.",
      },
    ],
    challenges: [
      {
        title: "Escalabilidade com Muitos Aplicativos ‚öôÔ∏è",
        description:
          "Gerenciar milhares de apps ativos com performance e estabilidade foi um grande desafio, exigindo otimiza√ß√µes cont√≠nuas no banco de dados e no front end.",
      },
      {
        title: "Alta Conectividade em Tempo Real üì∂",
        description:
          "Manter notifica√ß√µes simult√¢neas para milhares de usu√°rios conectados exigiu uma arquitetura eficiente e escal√°vel com Firebase e WebSockets.",
      },
      {
        title: "Integra√ß√£o com Sistema de Pagamentos e Tokeniza√ß√£o üîê",
        description:
          "Implementei um sistema de pagamentos completo utilizando a API do Asaas, com salvamento seguro do token do cart√£o de cr√©dito. Foi um processo complexo que exigiu aten√ß√£o redobrada √† seguran√ßa, valida√ß√£o de dados sens√≠veis e conformidade com boas pr√°ticas de prote√ß√£o de dados.",
      },
    ],
    images: [
      "/assets/images/hcapp/1.png",
      "/assets/images/hcapp/2.png",
      "/assets/images/hcapp/3.png",
      "/assets/images/hcapp/4.png",
    ],
    tags: [
      "React",
      "Node.js",
      "Redux",
      "HTML",
      "CSS",
      "Typescript",
      "Firebase",
      "Javascript",
      "Material UI",
      "WebSockets",
      "Next.js",
    ],
    liveUrl: "https://painel.hcapp.com.br/admin",
    completionDate: "Janeiro 2025",
  },
  {
    id: 3,
    title: "Plataforma de Checkout",
    description:
      "Sistema de checkout customiz√°vel para e-commerces, com layout din√¢mico e integra√ß√£o com pagamentos.",
    longDescription:
      "Essa plataforma foi idealizada para oferecer uma experi√™ncia de finaliza√ß√£o de compra mais fluida, r√°pida e personaliz√°vel. Atuei nesse projeto part-time ao longo da minha trajet√≥ria na HC App Software e Tecnologia, sendo respons√°vel pela estrutura√ß√£o base do sistema. Embora o contrato com a empresa contratante tenha sido encerrado antes da entrega final, o projeto trouxe aprendizados s√≥lidos com Angular e solu√ß√µes modernas inspiradas em grandes plataformas de checkout.",
    technicalDetails:
      "O frontend foi constru√≠do majoritariamente com Angular, aproveitando recursos como m√≥dulos lazy-loaded, reactive forms, NgRx e services para garantir escalabilidade, organiza√ß√£o e performance. No backend, utilizei Node.js com Firebase para estruturar uma API segura e responsiva. Os layouts foram baseados em prot√≥tipos do Figma, sempre priorizando responsividade e clareza na jornada de compra.",
    techDecisions: [
      {
        title: "Layout Din√¢mico e Intuitivo üß≠",
        description:
          "O design do checkout foi inspirado em experi√™ncias consolidadas no mercado, com foco em simplicidade, clareza nas etapas de compra e alta taxa de convers√£o.",
      },
      {
        title: "Estrutura Modular com Angular üß±",
        description:
          "Implementei uma arquitetura baseada em m√≥dulos lazy-loaded e reutiliza√ß√£o de componentes, garantindo organiza√ß√£o e melhor performance no carregamento.",
      },
      {
        title: "Formul√°rios Reativos e Valida√ß√£o Din√¢mica üßæ",
        description:
          "Utilizei reactive forms do Angular para lidar com formul√°rios complexos de maneira flex√≠vel, com valida√ß√µes din√¢micas e adapt√°veis ao tipo de produto e usu√°rio.",
      },
      {
        title: "Backend com Node.js e Firebase üîß",
        description:
          "Implementei a base da API para receber e tratar dados de pedidos, carrinho e pagamento, com foco em escalabilidade e seguran√ßa.",
      },
      {
        title: "Colabora√ß√£o com Design via Figma üé®",
        description:
          "Interagi com o time de design utilizando Figma como ponte de valida√ß√£o visual, garantindo fidelidade no layout e responsividade.",
      },
    ],
    challenges: [
      {
        title: "Manuten√ß√£o de Estado entre Etapas do Checkout üß†",
        description:
          "Gerenciar o estado global entre m√∫ltiplas etapas do processo de checkout exigiu estrat√©gias eficientes com Services e RxJS, evitando perda de dados e mantendo fluidez.",
      },
      {
        title: "Adapta√ß√£o do Layout para Diversos Fluxos de Compra üß©",
        description:
          "Criar componentes que se adaptassem a diferentes tipos de produto e jornada de compra foi um desafio t√©cnico e de UX.",
      },
      {
        title: "Integra√ß√£o Inicial com Gateways de Pagamento üí≥",
        description:
          "Estruturei a base para futuras integra√ß√µes com gateways de pagamento, prevendo suporte a checkout transparente, cart√µes e carteiras digitais.",
      },
    ],
    images: [
      "/assets/images/checkout/1.png",
      "/assets/images/checkout/2.png",
      "/assets/images/checkout/3.png",
    ],
    tags: [
      "Angular",
      "Typescript",
      "Node.js",
      "JavaScript",
      "MongoDB",
      "SEO",
      "UX",
      "Figma",
      "HTML",
      "CSS",
    ],
    completionDate: "Incompleto (Contrato encerrado em 2024)",
  },
  {
    id: 4,
    title: "VEFORMA",
    description:
      "Sistema white-label de e-commerce com visualiza√ß√£o interativa de produtos em 3D e realidade aumentada.",
    longDescription:
      "O VEFORMA √© uma plataforma white-label voltada para e-commerces que desejam oferecer experi√™ncias imersivas de compra por meio de realidade aumentada. Com suporte √† exibi√ß√£o de modelos 3D interativos, o sistema permite que os consumidores visualizem os produtos em escala real diretamente do navegador, aumentando a confian√ßa na compra e, consequentemente, a taxa de convers√£o.",
    technicalDetails:
      "Participei do projeto VEFORMA nos primeiros meses, sendo respons√°vel pela estrutura inicial do sistema. Utilizei React, Next.js e TypeScript para construir a base do projeto, incluindo a integra√ß√£o com a biblioteca modelViewer para renderiza√ß√£o de modelos 3D. A arquitetura foi pensada para ser responsiva, SEO-friendly e preparada para suportar grandes volumes de tr√°fego, com suporte a m√∫ltiplos dom√≠nios personalizados e rotas din√¢micas por cliente.",

    techDecisions: [
      {
        title: "Exibi√ß√£o Interativa com modelViewer üßä",
        description:
          "Utilizei a biblioteca modelViewer do Google para renderizar modelos 3D em tempo real no navegador com suporte a AR (realidade aumentada) via dispositivos m√≥veis.",
      },
      {
        title: "Arquitetura White-Label üè∑Ô∏è",
        description:
          "A estrutura modular permite que m√∫ltiplas lojas compartilhem a mesma base de c√≥digo, cada uma com seu dom√≠nio, tema e cat√°logo de produtos personalizado.",
      },
      {
        title: "Renderiza√ß√£o com SSR e SEO-Friendly ‚öôÔ∏è",
        description:
          "Utilizei Next.js com Server-Side Rendering (SSR) e gera√ß√£o de p√°ginas est√°ticas para garantir performance e otimiza√ß√£o de SEO em todas as p√°ginas de produto.",
      },
      {
        title: "Integra√ß√£o com Gateways de Pagamento üí≥",
        description:
          "Inclu√≠ suporte a diferentes m√©todos de pagamento e checkout transparente, com planos de expans√£o para integra√ß√£o com plataformas como Asaas.",
      },
      {
        title: "Painel de Controle do Cliente üßë‚Äçüíº",
        description:
          "Cada cliente possui um painel de administra√ß√£o para gerenciar seus produtos, modelos 3D, pedidos e configura√ß√µes do site.",
      },
    ],
    challenges: [
      {
        title: "Suporte Multiplataforma com Modelos 3D üì±",
        description:
          "Ajustar a renderiza√ß√£o de modelos 3D para diferentes tamanhos de tela e sistemas operacionais (iOS/Android/Desktop) foi desafiador, especialmente mantendo a performance e a responsividade.",
      },
      {
        title: "Gerenciamento de Recursos Pesados üîÑ",
        description:
          "O carregamento otimizado de arquivos .glb e .usdz exigiu t√©cnicas como compress√£o, pr√©-carregamento seletivo e lazy loading para manter a fluidez da navega√ß√£o.",
      },
      {
        title: "Customiza√ß√£o White-Label Automatizada ‚öôÔ∏è",
        description:
          "Foi necess√°rio criar uma l√≥gica robusta de roteamento din√¢mico e customiza√ß√£o por cliente, mantendo seguran√ßa e performance mesmo com m√∫ltiplas lojas ativas simultaneamente.",
      },
    ],
    images: [
      "/assets/images/veforma/1.png",
      "/assets/images/veforma/2.png",
      "/assets/images/veforma/3.png",
      "/assets/images/veforma/4.png",
      "/assets/images/veforma/5.png",
      "/assets/images/veforma/6.png",
      "/assets/images/veforma/7.png",
    ],
    tags: [
      "React",
      "Next.js",
      "SEO",
      "Material UI",
      "Redux",
      "HTML",
      "CSS",
      "TypeScript",
      "modelViewer",
      "3D",
      "White-label",
    ],
    completionDate: "Janeiro 2025",
  },
];

export const projectsDataEnglish: ProjectDetail[] = [
  {
    id: 1,
    title: "Cardapiro",
    description:
      "Complete solution for creating digital menus, focused on performance, SEO, and user experience.",
    longDescription:
      "Cardapiro is a platform developed for restaurants that want to create and manage digital menus in a practical and efficient way. Built independently, the project already has real users testing the free version. The application includes features such as menu customization, QR Code, integration with WhatsApp ordering, and management of highlights and promotions. Everything was built with a focus on performance, accessibility, and search engine optimization (SEO).",
    technicalDetails:
      "Developed with React on the front-end and Node.js on the back-end, using Firebase for database and authentication. The application is optimized with SEO techniques and performance best practices validated by Google Lighthouse. All development and infrastructure were designed to ensure scalability and a good user experience, even on mobile devices.",
    techDecisions: [
      {
        title: "State Management with Context API üóÇÔ∏è",
        description:
          "I used Context API to manage the global state of the application. Three main contexts were created: Users Context, Tasks Context, and Auth Context. This structure avoids unnecessary requests and ensures persistence across pages.",
      },
      {
        title: "Custom Hooks ü™ù",
        description:
          "I implemented custom hooks for data fetching and authentication logic. This reduced prop drilling and improved code organization.",
      },
      {
        title: "Mobile-First Layout üì±",
        description:
          "Developed with a Mobile-First approach to ensure responsiveness. All elements were designed to provide a good experience on mobile devices.",
      },
    ],
    challenges: [
      {
        title: "Performance with Many Products üçÉ",
        description:
          "I implemented pagination and lazy loading to improve the catalog‚Äôs performance with a large volume of products and images. Image loading was optimized to maintain a smooth browsing experience.",
      },
      {
        title: "Transaction Security üîí",
        description:
          "I used JWT tokens and HTTPS to ensure the security of payment information and user data, along with secure Single Sign-On authentication via Google and Facebook.",
      },
      {
        title: "Social Media Integration ü§ù",
        description:
          "Integrating Facebook authentication presented several technical challenges, but it is being finalized successfully, offering users more convenience and secure login.",
      },
      {
        title: "Performance Optimization for SEO üöÄ",
        description:
          "Achieving a good Google Lighthouse score was one of the biggest challenges, mainly due to image usage. After multiple optimizations, I reached a score of 90%, ensuring a fast and accessible application.",
      },
    ],
    images: [
      "/assets/images/cardapiro/1.png",
      "/assets/images/cardapiro/2.png",
      "/assets/images/cardapiro/3.png",
      "/assets/images/cardapiro/4.png",
      "/assets/images/cardapiro/5.png",
      "/assets/images/cardapiro/6.png",
      "/assets/images/cardapiro/7.png",
      "/assets/images/cardapiro/8.png",
    ],
    tags: [
      "React",
      "Javascript",
      "Node.js",
      "Asaas",
      "HTML",
      "CSS",
      "Material UI",
      "Tailwind CSS",
      "Docker",
      "Firebase",
      "SEO",
      "Lighthouse",
      "Single Sign-On",
    ],
    liveUrl: "https://cardapiro.com.br/",
    completionDate: "In progress",
  },
  {
    id: 2,
    title: "HC App",
    description:
      "White-label app platform for casinos with over 3,000 apps and 1 million monthly visits.",
    longDescription:
      "HC App is a robust white-label app platform created for online casino influencers to connect with their audience. Through the platform, influencers can host YouTube lives, send notifications, promote custom campaigns, share sports betting strategies, and interact in real-time with their followers. Currently, it supports over 3,000 active apps and receives more than 1 million monthly visits.",
    technicalDetails:
      "The system was developed with a focus on scalability and performance. I used React and JavaScript on the frontend, with Firebase for authentication, real-time database, and push notifications. The modular structure allows automated creation of new personalized apps for each influencer. The interface was built using Material UI, Next.js, and React.js, ensuring speed and responsiveness.",
    techDecisions: [
      {
        title: "Modular Architecture üß©",
        description:
          "The platform was designed to support multiple personalized apps based on a shared core, allowing rapid replication and centralized maintenance.",
      },
      {
        title: "State Management with Context API üóÇÔ∏è",
        description:
          "I used Context API to maintain global state and avoid unnecessary requests in different parts of the platform, such as authentication, dynamic content, and influencer-specific settings.",
      },
      {
        title: "Firebase Integration üî•",
        description:
          "Firebase was used for authentication, real-time Firestore, and push notifications, ensuring a dynamic and instant experience.",
      },
      {
        title: "Real-Time Notifications üì°",
        description:
          "I implemented tools so influencers can send instant messages to their users, creating an interactive and engaging experience.",
      },
      {
        title: "White-Label Admin Panel üë§",
        description:
          "Each influencer has an exclusive admin panel with full control over content, promotions, notifications, and app customization.",
      },
    ],
    challenges: [
      {
        title: "Scalability with Many Apps ‚öôÔ∏è",
        description:
          "Managing thousands of active apps with performance and stability was a major challenge, requiring continuous optimizations to the database and frontend.",
      },
      {
        title: "High Real-Time Connectivity üì∂",
        description:
          "Maintaining simultaneous notifications for thousands of connected users required an efficient and scalable architecture using Firebase and WebSockets.",
      },
      {
        title: "Payment System Integration and Tokenization üîê",
        description:
          "I implemented a full payment system using the Asaas API, with secure storage of credit card tokens. It was a complex process that required careful attention to security, sensitive data validation, and compliance with best data protection practices.",
      },
    ],
    images: [
      "/assets/images/hcapp/1.png",
      "/assets/images/hcapp/2.png",
      "/assets/images/hcapp/3.png",
      "/assets/images/hcapp/4.png",
    ],
    tags: [
      "React",
      "Node.js",
      "Redux",
      "HTML",
      "CSS",
      "Typescript",
      "Firebase",
      "Javascript",
      "Material UI",
      "WebSockets",
      "Next.js",
    ],
    liveUrl: "https://painel.hcapp.com.br/admin",
    completionDate: "January 2025",
  },
  {
    id: 3,
    title: "Checkout Platform",
    description:
      "Customizable checkout system for e-commerce, featuring dynamic layout and payment integration.",
    longDescription:
      "This platform was designed to offer a smoother, faster, and more customizable checkout experience. I worked on this project part-time during my time at HC App Software and Technology, being responsible for structuring the core of the system. Although the contract with the client company ended before the final delivery, the project brought solid learnings with Angular and modern solutions inspired by leading checkout platforms.",
    technicalDetails:
      "The frontend was primarily built with Angular, leveraging features such as lazy-loaded modules, reactive forms, NgRx, and services to ensure scalability, organization, and performance. On the backend, I used Node.js with Firebase to structure a secure and responsive API. The layouts were based on Figma prototypes, always prioritizing responsiveness and clarity in the purchase journey.",
    techDecisions: [
      {
        title: "Dynamic and Intuitive Layout üß≠",
        description:
          "The checkout design was inspired by well-established market experiences, focusing on simplicity, clear purchase steps, and high conversion rates.",
      },
      {
        title: "Modular Structure with Angular üß±",
        description:
          "I implemented an architecture based on lazy-loaded modules and reusable components, ensuring better organization and improved loading performance.",
      },
      {
        title: "Reactive Forms and Dynamic Validation üßæ",
        description:
          "Used Angular‚Äôs reactive forms to handle complex forms flexibly, with validations that adapt dynamically to product and user types.",
      },
      {
        title: "Backend with Node.js and Firebase üîß",
        description:
          "I built the API foundation to handle order, cart, and payment data, focusing on scalability and security.",
      },
      {
        title: "Collaboration with Design via Figma üé®",
        description:
          "Worked closely with the design team using Figma as the visual validation bridge, ensuring layout fidelity and responsiveness.",
      },
    ],
    challenges: [
      {
        title: "State Management Across Checkout Steps üß†",
        description:
          "Managing global state across multiple checkout steps required efficient strategies with Services and RxJS, avoiding data loss and ensuring smooth transitions.",
      },
      {
        title: "Layout Adaptation for Different Purchase Flows üß©",
        description:
          "Creating components that adapt to various product types and checkout journeys was a technical and UX challenge.",
      },
      {
        title: "Initial Integration with Payment Gateways üí≥",
        description:
          "I structured the foundation for future integrations with payment gateways, anticipating support for transparent checkout, credit cards, and digital wallets.",
      },
    ],
    images: [
      "/assets/images/checkout/1.png",
      "/assets/images/checkout/2.png",
      "/assets/images/checkout/3.png",
    ],
    tags: [
      "Angular",
      "Typescript",
      "Node.js",
      "JavaScript",
      "MongoDB",
      "SEO",
      "UX",
      "Figma",
      "HTML",
      "CSS",
    ],
    completionDate: "Incomplete (Contract ended in 2024)",
  },

  {
    id: 4,
    title: "VEFORMA",
    description:
      "White-label e-commerce system with interactive 3D product visualization and augmented reality.",
    longDescription:
      "VEFORMA is a white-label platform aimed at e-commerce businesses seeking to offer immersive shopping experiences through augmented reality. Supporting the display of interactive 3D models, the system allows consumers to view products in real scale directly from their browser, enhancing purchase confidence and consequently improving conversion rates.",
    technicalDetails:
      "I participated in the initial months of the VEFORMA project, responsible for the system‚Äôs foundational structure. I used React, Next.js, and TypeScript to build the project base, including integration with the modelViewer library for 3D model rendering. The architecture was designed to be responsive, SEO-friendly, and scalable to handle high traffic, supporting multiple custom domains and dynamic routes per client.",
    techDecisions: [
      {
        title: "Interactive Display with modelViewer üßä",
        description:
          "I used Google‚Äôs modelViewer library to render 3D models in real-time in the browser, with AR (augmented reality) support on mobile devices.",
      },
      {
        title: "White-Label Architecture üè∑Ô∏è",
        description:
          "The modular structure allows multiple stores to share the same codebase, each with its own domain, theme, and custom product catalog.",
      },
      {
        title: "SSR Rendering and SEO-Friendly ‚öôÔ∏è",
        description:
          "I utilized Next.js with Server-Side Rendering (SSR) and static page generation to ensure performance and SEO optimization across all product pages.",
      },
      {
        title: "Payment Gateway Integration üí≥",
        description:
          "I included support for various payment methods and transparent checkout, with plans for future integration with platforms like Asaas.",
      },
      {
        title: "Client Dashboard üßë‚Äçüíº",
        description:
          "Each client has an admin panel to manage their products, 3D models, orders, and site settings.",
      },
    ],
    challenges: [
      {
        title: "Cross-Platform Support for 3D Models üì±",
        description:
          "Adjusting 3D model rendering for different screen sizes and operating systems (iOS/Android/Desktop) was challenging, especially while maintaining performance and responsiveness.",
      },
      {
        title: "Handling Heavy Resources üîÑ",
        description:
          "Optimizing the loading of .glb and .usdz files required techniques like compression, selective preloading, and lazy loading to maintain smooth navigation.",
      },
      {
        title: "Automated White-Label Customization ‚öôÔ∏è",
        description:
          "I needed to create a robust dynamic routing and client customization logic, ensuring security and performance even with multiple active stores simultaneously.",
      },
    ],
    images: [
      "/assets/images/veforma/1.png",
      "/assets/images/veforma/2.png",
      "/assets/images/veforma/3.png",
      "/assets/images/veforma/4.png",
      "/assets/images/veforma/5.png",
      "/assets/images/veforma/6.png",
      "/assets/images/veforma/7.png",
    ],
    tags: [
      "React",
      "Next.js",
      "SEO",
      "Material UI",
      "Redux",
      "HTML",
      "CSS",
      "TypeScript",
      "modelViewer",
      "3D",
      "White-label",
    ],
    completionDate: "January 2025",
  },
];
